{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "options": {
          "responseCode": 200
        }
      },
      "id": "96474ef7-da85-4dbf-a15d-fb7ce8193059",
      "name": "Respond to Webhook1",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        960,
        192
      ]
    },
    {
      "parameters": {
        "resource": "chat",
        "model": "gpt-4o-mini",
        "prompt": {
          "messages": [
            {
              "content": "Eres un asistente que mejora títulos de tareas para que sean claros."
            },
            {
              "content": "=Mejora este título de tarea para que sea más claro y conciso, manteniendo el idioma original: {{ $json.body.body.title }}"
            }
          ]
        },
        "simplifyOutput": false,
        "options": {},
        "requestOptions": {}
      },
      "id": "5cea19ac-4a57-44ba-bf63-8d877b4574d5",
      "name": "OpenAI - Improved Title1",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [
        432,
        224
      ],
      "credentials": {
        "openAiApi": {
          "id": "0XCjgnegAduwWAjP",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Este código extrae el contenido mejorado del título de la respuesta de OpenAI\n// y lo formatea como un objeto JSON con la propiedad 'improvedTitle'\n\n// Accedemos a los datos de entrada (la respuesta de OpenAI)\nconst openAiResponse = $input.first();\n\n// Intentamos acceder directamente a la estructura que has identificado\nlet improvedTitle = \"No se pudo procesar el título mejorado\";\n\n// Verificamos si existe la estructura específica que mencionaste\nif (openAiResponse && openAiResponse.json && openAiResponse.json.choices && \n    openAiResponse.json.choices[0] && openAiResponse.json.choices[0].message && \n    openAiResponse.json.choices[0].message.content) {\n  improvedTitle = openAiResponse.json.choices[0].message.content;\n} else {\n  // Mantenemos las verificaciones alternativas como respaldo\n  if (Array.isArray(openAiResponse) && openAiResponse[0] && openAiResponse[0].message && openAiResponse[0].message.content) {\n    improvedTitle = openAiResponse[0].message.content;\n  } else if (openAiResponse && openAiResponse.choices && openAiResponse.choices[0] && openAiResponse.choices[0].message) {\n    improvedTitle = openAiResponse.choices[0].message.content;\n  } else if (openAiResponse && openAiResponse.message && openAiResponse.message.content) {\n    improvedTitle = openAiResponse.message.content;\n  } else if (openAiResponse && openAiResponse.content) {\n    improvedTitle = openAiResponse.content;\n  } else if (typeof openAiResponse === 'string') {\n    improvedTitle = openAiResponse;\n  }\n}\n\n// Devolvemos un objeto JSON con la estructura esperada\nreturn {\n  json: {\n    improvedTitle: improvedTitle\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        704,
        320
      ],
      "id": "46b45132-60c8-49bd-8f2d-e1978160bdb0",
      "name": "Code1"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "improve-task",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "02b6d8be-32f9-4acb-827f-ee669a0365e3",
      "name": "Webhook1",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        48,
        320
      ],
      "webhookId": "abcd1234"
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI - Improved Title1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "OpenAI - Improved Title1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "22794f63-5805-4340-a094-81c40fb597aa",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "2e69fabf38c590933c29f533a5c3e3e44b3706a9714d4f20ba1034b88ea35742"
  },
  "id": "n7rPwQdLGm1slW2i",
  "tags": []
}